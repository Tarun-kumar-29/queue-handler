version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - queue-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  queue-handler:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVER_PORT=3000
      - DEFAULT_CONCURRENCY=10
      - HTTP_TIMEOUT_SECONDS=300
      - MAX_RETRIES=3
      - BACKOFF_DELAY_MS=5000
      - WEBHOOK_TIMEOUT_SECONDS=600
      - JOB_TTL_HOURS=24
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - queue-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Asynq Web UI for monitoring
  asynqmon:
    image: hibiken/asynqmon:latest
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - queue-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
    driver: local

networks:
  queue-network:
    driver: bridge
    name: queue-handler-network